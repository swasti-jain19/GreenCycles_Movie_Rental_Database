-- Most Popular Movie Categories. --

SELECT c.name, COUNT(fc.film_id) AS rental_count
FROM category c
JOIN film_category fc ON c.category_id = fc.category_id
JOIN inventory i ON fc.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY c.name
ORDER BY rental_count DESC;

-- Customer Segmentation as 'High-Value', 'Medium-Value', 'Low-Value' (based on revenue generated by them). --

SELECT 
    c.customer_id,
    c.first_name,
    c.last_name,
    SUM(p.amount) AS total_spent,
    CASE
        WHEN SUM(p.amount) > 100 THEN 'High-Value'
        WHEN SUM(p.amount) BETWEEN 50 AND 100 THEN 'Medium-Value'
        ELSE 'Low-Value'
    END AS customer_segment
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN payment p ON r.rental_id = p.rental_id
GROUP BY c.customer_id, c.first_name, c.last_name;

-- Inventory Analysis- show total inventories, total rentals, rental rate based on title. --

SELECT 
    f.title,
    COUNT(i.inventory_id) AS inventory_count,
    COUNT(r.rental_id) AS rental_count,
    (COUNT(r.rental_id) / COUNT(i.inventory_id)) AS rental_rate
FROM film f
JOIN inventory i ON f.film_id = i.film_id
LEFT JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY f.title;

-- Inventory Turnover Rate --

SELECT 
    ROUND((COUNT(DISTINCT r.rental_id) * 100.0 / COUNT(DISTINCT i.inventory_id)),2) || '%'  AS inventory_turnover_rate
FROM inventory i
LEFT JOIN rental r ON i.inventory_id = r.inventory_id;

-- Movies Rented Most Frequently Together. --

SELECT f1.title AS movie1, f2.title AS movie2, COUNT(*) AS rental_count
FROM rental r1
JOIN inventory i1 ON r1.inventory_id = i1.inventory_id
JOIN film f1 ON i1.film_id = f1.film_id
JOIN rental r2 ON r1.customer_id = r2.customer_id AND r1.rental_id != r2.rental_id
JOIN inventory i2 ON r2.inventory_id = i2.inventory_id
JOIN film f2 ON i2.film_id = f2.film_id
WHERE r1.rental_date = r2.rental_date
GROUP BY f1.title, f2.title
ORDER BY rental_count DESC;

-- Most Profitable Month. --

SELECT DATE_TRUNC('month', p.payment_date) AS month, SUM(p.amount) AS total_revenue
FROM payment p
GROUP BY DATE_TRUNC('month', p.payment_date)
ORDER BY total_revenue DESC
LIMIT 1;

-- Average Rental Rate per Category. --

SELECT c.name, AVG(f.rental_rate) AS avg_rental_rate
FROM category c
JOIN film_category fc ON c.category_id = fc.category_id
JOIN film f ON fc.film_id = f.film_id
GROUP BY c.name;

-- Most Popular Day of the Week for Rentals. --

SELECT DATE_PART('dow', r.rental_date) AS day_of_week, COUNT(*) AS rental_count
FROM rental r
GROUP BY DATE_PART('dow', r.rental_date)
ORDER BY rental_count DESC
LIMIT 1;

-- Sales Trend Over Time. --

SELECT DATE_TRUNC('week', p.payment_date) AS week, SUM(p.amount) AS total_revenue
FROM payment p
GROUP BY DATE_TRUNC('week', p.payment_date)
ORDER BY week;

-- Revenue by Store. --

SELECT s.store_id, SUM(p.amount) AS total_revenue
FROM store s
JOIN staff st ON s.manager_staff_id = st.staff_id
JOIN payment p ON st.staff_id = p.staff_id
GROUP BY s.store_id;

-- Most Popular Language for Movies. --

SELECT l.name, COUNT(f.film_id) AS film_count
FROM language l
JOIN film f ON l.language_id = f.language_id
GROUP BY l.name
ORDER BY film_count DESC
LIMIT 1;

--  Percentage of Customers Who Have Rented a Specific Movie --

SELECT f.title, 
    ROUND((COUNT(DISTINCT r.customer_id) * 100.0 / (SELECT COUNT(*) FROM customer)),2) AS percentage_customers
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY f.title
ORDER BY percentage_customers desc;

-- Average Number of Rentals per Customer. --

SELECT AVG(rental_count) AS avg_rentals_per_customer
FROM (
    SELECT c.customer_id, COUNT(*) AS rental_count
    FROM customer c
    JOIN rental r ON c.customer_id = r.customer_id
    GROUP BY c.customer_id
) AS subquery;

-- Top 5 Actors by Rental Count. --

SELECT a.first_name, a.last_name, COUNT(r.rental_id) AS rental_count
FROM actor a
JOIN film_actor fa ON a.actor_id = fa.actor_id
JOIN film f ON fa.film_id = f.film_id
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY a.first_name, a.last_name
ORDER BY rental_count DESC
LIMIT 5;

--  Top 5 Customers by Total Revenue --

SELECT c.customer_id, c.first_name, c.last_name, SUM(p.amount) AS total_revenue
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN payment p ON r.rental_id = p.rental_id
GROUP BY c.customer_id, c.first_name, c.last_name
ORDER BY total_revenue DESC
LIMIT 5;

-- Percentage of Late Rentals --

SELECT 
    ROUND((COUNT(DISTINCT CASE WHEN r.return_date > (r.rental_date + (f.rental_duration || ' days')::INTERVAL) THEN r.rental_id END) * 100.0 / 
     COUNT(DISTINCT r.rental_id)),2) || '%' AS late_rental_percentage
FROM rental r
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id;
